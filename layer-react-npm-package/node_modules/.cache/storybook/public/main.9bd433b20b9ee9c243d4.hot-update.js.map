{"version":3,"file":"main.9bd433b20b9ee9c243d4.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AAhBA;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AAhBA;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA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","sources":["webpack://duckdevatgit-layer/./src/react-components/AiAssistant/AiAssistant.stories.tsx","webpack://duckdevatgit-layer/./src/react-components/AiAssistant/ItemDetail/ItemDetail.stories.tsx","webpack://duckdevatgit-layer/./src/react-components/AiAssistant/ListItem/ListItem.stories.tsx","webpack://duckdevatgit-layer/./src/react-components/Button/Button.stories.tsx","webpack://duckdevatgit-layer/./src/react-components/EnvironmentError/EnvironmentError.stories.tsx","webpack://duckdevatgit-layer/./src/react-components/Loader/Loader.stories.tsx","webpack://duckdevatgit-layer/./src/react-components/Text/Text.stories.tsx","webpack://duckdevatgit-layer/./src/assets/icons/arrowForwardIcon.tsx","webpack://duckdevatgit-layer/./src/assets/icons/arrowRightIcon.tsx","webpack://duckdevatgit-layer/./src/assets/icons/crossIcon.tsx","webpack://duckdevatgit-layer/./src/react-components/AiAssistant/AiAssistant.tsx","webpack://duckdevatgit-layer/./src/react-components/AiAssistant/ItemDetail/ItemDetail.tsx","webpack://duckdevatgit-layer/./src/react-components/AiAssistant/ListItem/ListItem.tsx","webpack://duckdevatgit-layer/./src/react-components/Button/Button.tsx","webpack://duckdevatgit-layer/./src/react-components/EnvironmentError/EnvironmentError.tsx","webpack://duckdevatgit-layer/./src/react-components/Loader/Loader.tsx","webpack://duckdevatgit-layer/./src/react-components/Text/Text.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\r\\nimport { Meta, Story } from \\\"@storybook/react\\\";\\r\\nimport AiAssistant, { AiAssistantProps } from \\\"./AiAssistant\\\";\\r\\nimport myImage from '../../assets/images/demoImage.png'\\r\\nexport default {\\r\\n  title: \\\"ReactComponentLibrary/AiAssistant\\\",\\r\\n  component: AiAssistant,\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<AiAssistantProps> = (args) => <AiAssistant {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  itemList : [\\r\\n    {\\r\\n      title: \\\"Purchase More:\\\",\\r\\n      subtitle: \\\"PRINGLES SOUR CREAM & ONION PO\\\",\\r\\n    },\\r\\n    {\\r\\n      title: \\\"Purchase More:\\\",\\r\\n      subtitle: \\\"PRINGLES SOUR CREAM & ONION PO\\\",\\r\\n    },\\r\\n    {\\r\\n      title: \\\"Purchase More:\\\",\\r\\n      subtitle: \\\"PRINGLES SOUR CREAM & ONION PO\\\",\\r\\n    },\\r\\n    {\\r\\n      title: \\\"Purchase More:\\\",\\r\\n      subtitle: \\\"PRINGLES SOUR CREAM & ONION PO\\\",\\r\\n    },\\r\\n    {\\r\\n      title: \\\"Purchase More:\\\",\\r\\n      subtitle: \\\"PRINGLES SOUR CREAM & ONION PO\\\",\\r\\n    },\\r\\n    {\\r\\n      title: \\\"Purchase More:\\\",\\r\\n      subtitle: \\\"PRINGLES SOUR CREAM & ONION PO\\\",\\r\\n    },\\r\\n  ],\\r\\n  color: \\\"#7a6bf2\\\",\\r\\n  image: myImage,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":42,\"line\":10},\"endLoc\":{\"col\":77,\"line\":10},\"startBody\":{\"col\":42,\"line\":10},\"endBody\":{\"col\":77,\"line\":10}}};\n    \nimport React from \"react\";\r\nimport { Meta, Story } from \"@storybook/react\";\r\nimport AiAssistant, { AiAssistantProps } from \"./AiAssistant\";\r\nimport myImage from '../../assets/images/demoImage.png'\r\nexport default {\r\n  title: \"ReactComponentLibrary/AiAssistant\",\r\n  component: AiAssistant,\r\n} as Meta;\r\n\r\nconst Template: Story<AiAssistantProps> = (args) => <AiAssistant {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  itemList : [\r\n    {\r\n      title: \"Purchase More:\",\r\n      subtitle: \"PRINGLES SOUR CREAM & ONION PO\",\r\n    },\r\n    {\r\n      title: \"Purchase More:\",\r\n      subtitle: \"PRINGLES SOUR CREAM & ONION PO\",\r\n    },\r\n    {\r\n      title: \"Purchase More:\",\r\n      subtitle: \"PRINGLES SOUR CREAM & ONION PO\",\r\n    },\r\n    {\r\n      title: \"Purchase More:\",\r\n      subtitle: \"PRINGLES SOUR CREAM & ONION PO\",\r\n    },\r\n    {\r\n      title: \"Purchase More:\",\r\n      subtitle: \"PRINGLES SOUR CREAM & ONION PO\",\r\n    },\r\n    {\r\n      title: \"Purchase More:\",\r\n      subtitle: \"PRINGLES SOUR CREAM & ONION PO\",\r\n    },\r\n  ],\r\n  color: \"#7a6bf2\",\r\n  image: myImage,\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => <AiAssistant {...args} />\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { Meta, Story } from '@storybook/react';\\r\\nimport React, { useRef } from 'react';\\r\\nimport ItemDetail, { ItemDetailHandle, ItemDetailProps } from './ItemDetail';\\r\\n\\r\\nexport default {\\r\\n  title: 'ReactComponentLibrary/AiAssistant/ItemDetail',\\r\\n  component: ItemDetail,\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<ItemDetailProps> = (args) => {\\r\\n  const itemDetailRef = useRef<ItemDetailHandle>(null);\\r\\n\\r\\n  const handleClick = () => {\\r\\n    if (itemDetailRef.current) {\\r\\n      itemDetailRef.current.log();\\r\\n    }\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <button onClick={handleClick}>Log to Console</button>\\r\\n      <ItemDetail {...args} ref={itemDetailRef} />\\r\\n    </>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  color: 'blue',\\r\\n  id: '1',\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":41,\"line\":10},\"endLoc\":{\"col\":1,\"line\":25},\"startBody\":{\"col\":41,\"line\":10},\"endBody\":{\"col\":1,\"line\":25}}};\n    \nimport { Meta, Story } from '@storybook/react';\r\nimport React, { useRef } from 'react';\r\nimport ItemDetail, { ItemDetailHandle, ItemDetailProps } from './ItemDetail';\r\n\r\nexport default {\r\n  title: 'ReactComponentLibrary/AiAssistant/ItemDetail',\r\n  component: ItemDetail,\r\n} as Meta;\r\n\r\nconst Template: Story<ItemDetailProps> = (args) => {\r\n  const itemDetailRef = useRef<ItemDetailHandle>(null);\r\n\r\n  const handleClick = () => {\r\n    if (itemDetailRef.current) {\r\n      itemDetailRef.current.log();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={handleClick}>Log to Console</button>\r\n      <ItemDetail {...args} ref={itemDetailRef} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  color: 'blue',\r\n  id: '1',\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => {\\r\\n  const itemDetailRef = useRef<ItemDetailHandle>(null);\\r\\n\\r\\n  const handleClick = () => {\\r\\n    if (itemDetailRef.current) {\\r\\n      itemDetailRef.current.log();\\r\\n    }\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <button onClick={handleClick}>Log to Console</button>\\r\\n      <ItemDetail {...args} ref={itemDetailRef} />\\r\\n    </>\\r\\n  );\\r\\n}\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\r\\nimport { Meta, Story } from \\\"@storybook/react\\\";\\r\\nimport { ListItemProps } from \\\"./ListItem\\\";\\r\\nimport ListItem from \\\"./ListItem\\\";\\r\\n\\r\\nexport default {\\r\\n  title: \\\"ReactComponentLibrary/AiAssistant/ListItem\\\",\\r\\n  component: ListItem,\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<ListItemProps> = (args) => <ListItem {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  item: {\\r\\n    title: \\\"Default Title\\\",\\r\\n    subtitle: \\\"Default Subtitle\\\",\\r\\n  },\\r\\n  onClickList: () => console.log(\\\"Clicked List\\\"),\\r\\n  color: \\\"#000000\\\",\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":39,\"line\":11},\"endLoc\":{\"col\":71,\"line\":11},\"startBody\":{\"col\":39,\"line\":11},\"endBody\":{\"col\":71,\"line\":11}}};\n    \nimport React from \"react\";\r\nimport { Meta, Story } from \"@storybook/react\";\r\nimport { ListItemProps } from \"./ListItem\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nexport default {\r\n  title: \"ReactComponentLibrary/AiAssistant/ListItem\",\r\n  component: ListItem,\r\n} as Meta;\r\n\r\nconst Template: Story<ListItemProps> = (args) => <ListItem {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  item: {\r\n    title: \"Default Title\",\r\n    subtitle: \"Default Subtitle\",\r\n  },\r\n  onClickList: () => console.log(\"Clicked List\"),\r\n  color: \"#000000\",\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => <ListItem {...args} />\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\r\\nimport { Meta, Story } from \\\"@storybook/react\\\";\\r\\nimport Button, { ButtonProps } from \\\"./Button\\\";\\r\\n\\r\\nexport default {\\r\\n  title: 'ReactComponentLibrary/Button',\\r\\n  component: Button,\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<ButtonProps> = (args) => <Button {...args} />;\\r\\n\\r\\nexport const Primary = Template.bind({});\\r\\nPrimary.args = {\\r\\n  className: \\\"primary-button\\\",\\r\\n  child: \\\"Click me\\\",\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":37,\"line\":10},\"endLoc\":{\"col\":67,\"line\":10},\"startBody\":{\"col\":37,\"line\":10},\"endBody\":{\"col\":67,\"line\":10}}};\n    \nimport React from \"react\";\r\nimport { Meta, Story } from \"@storybook/react\";\r\nimport Button, { ButtonProps } from \"./Button\";\r\n\r\nexport default {\r\n  title: 'ReactComponentLibrary/Button',\r\n  component: Button,\r\n} as Meta;\r\n\r\nconst Template: Story<ButtonProps> = (args) => <Button {...args} />;\r\n\r\nexport const Primary = Template.bind({});\r\nPrimary.args = {\r\n  className: \"primary-button\",\r\n  child: \"Click me\",\r\n};\r\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Primary.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Story, Meta } from '@storybook/react/types-6-0';\\r\\nimport EnvironmentError, { EnvironmentErrorProps } from './EnvironmentError';\\r\\n\\r\\nexport default {\\r\\n  title: 'ReactComponentLibrary/EnvironmentError',\\r\\n  component: EnvironmentError,\\r\\n} as Meta;\\r\\n\\r\\nconst Template: Story<EnvironmentErrorProps> = (args) => <EnvironmentError {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  color: '#FF0000',\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":47,\"line\":10},\"endLoc\":{\"col\":87,\"line\":10},\"startBody\":{\"col\":47,\"line\":10},\"endBody\":{\"col\":87,\"line\":10}}};\n    \nimport React from 'react';\r\nimport { Story, Meta } from '@storybook/react/types-6-0';\r\nimport EnvironmentError, { EnvironmentErrorProps } from './EnvironmentError';\r\n\r\nexport default {\r\n  title: 'ReactComponentLibrary/EnvironmentError',\r\n  component: EnvironmentError,\r\n} as Meta;\r\n\r\nconst Template: Story<EnvironmentErrorProps> = (args) => <EnvironmentError {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  color: '#FF0000',\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => <EnvironmentError {...args} />\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\r\\nimport { Meta, Story } from \\\"@storybook/react/types-6-0\\\";\\r\\nimport Loader from './Loader';\\r\\n\\r\\nconst meta: Meta = {\\r\\n  title: \\\"ReactComponentLibrary/Loader\\\",\\r\\n  component: Loader,\\r\\n};\\r\\n\\r\\nexport default meta;\\r\\n\\r\\nconst Template: Story = (args) => <Loader  />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":24,\"line\":12},\"endLoc\":{\"col\":45,\"line\":12},\"startBody\":{\"col\":24,\"line\":12},\"endBody\":{\"col\":45,\"line\":12}}};\n    \nimport React from \"react\";\r\nimport { Meta, Story } from \"@storybook/react/types-6-0\";\r\nimport Loader from './Loader';\r\n\r\nconst meta: Meta = {\r\n  title: \"ReactComponentLibrary/Loader\",\r\n  component: Loader,\r\n};\r\n\r\nexport default meta;\r\n\r\nconst Template: Story = (args) => <Loader  />;\r\n\r\nexport const Default = Template.bind({});\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args) => <Loader  />\" }, ...Default.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\r\\nimport { Meta } from '@storybook/react/types-6-0';\\r\\nimport Text, {TextProps} from './Text';\\r\\n\\r\\nexport default {\\r\\n  title: 'ReactComponentLibrary/Text',\\r\\n  component: Text,\\r\\n} as Meta;\\r\\n\\r\\nconst Template = (args: TextProps) => <Text {...args} />;\\r\\n\\r\\nexport const Default = Template.bind({});\\r\\nDefault.args = {\\r\\n  label: 'Hello World',\\r\\n  className: 'custom-class',\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":17,\"line\":10},\"endLoc\":{\"col\":56,\"line\":10},\"startBody\":{\"col\":17,\"line\":10},\"endBody\":{\"col\":56,\"line\":10}}};\n    \nimport React from 'react';\r\nimport { Meta } from '@storybook/react/types-6-0';\r\nimport Text, {TextProps} from './Text';\r\n\r\nexport default {\r\n  title: 'ReactComponentLibrary/Text',\r\n  component: Text,\r\n} as Meta;\r\n\r\nconst Template = (args: TextProps) => <Text {...args} />;\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  label: 'Hello World',\r\n  className: 'custom-class',\r\n};\r\n\n\n\nDefault.parameters = { storySource: { source: \"(args: TextProps) => <Text {...args} />\" }, ...Default.parameters };","import React from 'react';\r\n\r\ninterface ArrowForwardIconProps {\r\n  color?: string;\r\n}\r\n\r\nconst ArrowForwardIcon: React.FC<ArrowForwardIconProps> = ({ color = '#000000', ...props }) => {\r\n  return (\r\n    <svg\r\n      width=\"9\"\r\n      height=\"14\"\r\n      viewBox=\"0 0 9 14\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M1.35008 13.6667L0.166748 12.4833L5.65008 6.99999L0.166748 1.51666L1.35008 0.333328L8.01675 6.99999L1.35008 13.6667Z\"\r\n        fill={color === \"#000000\" ? \"#000000\" : color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default ArrowForwardIcon;\r\n","import React, { FC } from 'react';\r\n\r\nexport interface ArrowRightIconProps {\r\n  color?: string;\r\n}\r\n\r\nconst ArrowRightIcon: FC<ArrowRightIconProps> = ({ color = '#000000', ...props }) => {\r\n  return (\r\n    <svg\r\n      width=\"22\"\r\n      height=\"22\"\r\n      viewBox=\"0 0 22 22\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M10.9997 21.6667L0.333008 11L10.9997 0.333328L12.8997 2.19999L5.43301 9.66666H21.6663V12.3333H5.43301L12.8997 19.8L10.9997 21.6667Z\"\r\n        fill={color === \"#000000\" ? \"#000000\" : color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default ArrowRightIcon;\r\n\r\n","import React, { FC } from \"react\";\r\n\r\ninterface CrossIconProps {\r\n  color?: string;\r\n}\r\n\r\nconst CrossIcon: FC<CrossIconProps> = ({ color = \"#000000\", ...props }) => {\r\n  return (\r\n    <svg\r\n      width=\"28\"\r\n      height=\"28\"\r\n      viewBox=\"0 0 28 28\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n     <path\r\n        d=\"M2.8 28L0 25.2L11.2 14L0 2.8L2.8 0L14 11.2L25.2 0L28 2.8L16.8 14L28 25.2L25.2 28L14 16.8L2.8 28Z\"\r\n        fill={color === \"#000000\" ? \"#000000\" : color}\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CrossIcon;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport Text from \"../Text/Text\";\r\nimport Button from \"../Button/Button\";\r\nimport ListItem, { ListItemProps } from \"./ListItem/ListItem\";\r\nimport ItemDetail from \"./ItemDetail/ItemDetail\";\r\nimport CrossIcon from \"../../assets/icons/crossIcon\";\r\nimport ArrowRightIcon from \"../../assets/icons/arrowRightIcon\";\r\nimport \"./AiAssistant.scss\";\r\nimport EnvironmentError from \"../EnvironmentError\";\r\nimport { MyDataListEngine } from \"../DataListEngine\";\r\nimport { useSpring, animated, useTransition } from \"@react-spring/web\";\r\n\r\nexport type AiAssistantProps = {\r\n  itemList: ItemData[];\r\n  color: string;\r\n  image: string;\r\n};\r\n\r\nexport type ItemData = {\r\n  title: string;\r\n  subtitle: string;\r\n  payload: string;\r\n};\r\n\r\nconst AiAssistant = ({ itemList, color, image }: AiAssistantProps) => {\r\n  const engine = new MyDataListEngine();\r\n\r\n  if (!engine.validateKeys()) {\r\n    return <EnvironmentError color=\"#FF0000\" />;\r\n  }\r\n\r\n  const [showPopUp, setShowPopUp] = useState(false);\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const [showEnvError, setShowEnvError] = useState(false);\r\n  const [itemDataList, setItemDataList] = useState<ItemData[]>([]);\r\n  const [selectedItem, setSelectedItem] = useState<number>(0);\r\n\r\n  const ref = useRef<any>();\r\n  const refPopUp = useRef<HTMLDivElement>(null);\r\n  const refBackButton = useRef<HTMLButtonElement>(null);\r\n\r\n  const prefacePrompt = `Justify the policy action in this json data using the other data in the obejct and respond very concisely and use numbers: \\n\\n`;\r\n\r\n  // Create a useEffect hook that fills itemDataList wiht ItemData objects from the itemList\r\n  useEffect(() => {\r\n    const tempItemDataList: ItemData[] = [];\r\n    itemList.forEach((item) => {\r\n      tempItemDataList.push({\r\n        title: item.title,\r\n        subtitle: item.subtitle,\r\n        payload: prefacePrompt + item.payload,\r\n      });\r\n    });\r\n    setItemDataList(tempItemDataList);\r\n  }, [itemList]);\r\n\r\n  const onClickList = async (title: string) => {\r\n    try {\r\n      const res = await engine.generateText(title);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setShowDetails(true);\r\n  };\r\n\r\n  const onClickPopupButton = () => {\r\n    setShowDiv(!showDiv);\r\n    setShowDetails(false);\r\n    if (showPopUp) {\r\n      if (refPopUp.current) {\r\n        refPopUp.current.className = \"main-popup-container-animate-end\";\r\n        const timer = setTimeout(() => {\r\n          setShowPopUp(false);\r\n        }, 250);\r\n        return () => clearTimeout(timer);\r\n      }\r\n    } else {\r\n      setShowPopUp(true);\r\n    }\r\n  };\r\n\r\n  const onClickBackButton = () => {\r\n    if (showDetails) {\r\n      if (refBackButton.current) {\r\n        refBackButton.current.className =\r\n          \"ai-assistant-main-popup-header-back-button-style-end\";\r\n        ref.current.log();\r\n        const timer = setTimeout(() => {\r\n          setShowDetails(false);\r\n        }, 250);\r\n        return () => clearTimeout(timer);\r\n      }\r\n    } else {\r\n      setShowDetails(true);\r\n    }\r\n  };\r\n\r\n  const [showDiv, setShowDiv] = useState(false);\r\n\r\n  const springProps = useSpring({\r\n    height: showDiv ? \"427px\" : \"0\",\r\n    opacity: showDiv ? 1 : 0,\r\n    overflow: \"hidden\",\r\n    config: { tension: 200, friction: 100 },\r\n    scale: showDiv ? 1 : 0,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ai-assistant-main-container\">\r\n        <Button\r\n          style={{ backgroundColor: color }}\r\n          className=\"main-popup-button\"\r\n          onClick={() => onClickPopupButton()}\r\n          child={\r\n            showPopUp ? (\r\n              <CrossIcon color=\"#ffffff\" />\r\n            ) : (\r\n              <img src={image} alt=\"img\" width=\"32px\" height=\"32px\" />\r\n            )\r\n          }\r\n        />\r\n        {showPopUp && (\r\n          <animated.div\r\n            style={springProps}\r\n            ref={refPopUp}\r\n            id=\"tunnel\"\r\n            className=\"main-popup-container-animate-start\"\r\n          >\r\n            {showEnvError && <EnvironmentError color={color} />}\r\n            <div\r\n              className=\"popup-header-container\"\r\n              style={{ borderBottomColor: color }}\r\n            >\r\n              {showDetails && (\r\n                <button\r\n                  ref={refBackButton}\r\n                  onClick={() => onClickBackButton()}\r\n                  className=\"header-back-button-style\"\r\n                >\r\n                  <ArrowRightIcon color={color} />\r\n                </button>\r\n              )}\r\n              <div className=\"header-text-container\">\r\n                <Text className=\"header-text-style\" label=\"Bops Insight\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"main-item-list-container\">\r\n              {showDetails ? (\r\n                <ItemDetail\r\n                  id=\"detailif\"\r\n                  ref={ref}\r\n                  color={color}\r\n                  itemData={itemDataList[selectedItem]}\r\n                />\r\n              ) : (\r\n                itemList.map((item, index) => (\r\n                  <ListItem\r\n                    item={item}\r\n                    key={index}\r\n                    onClickList={() => {\r\n                      onClickList(item.title);\r\n                      setSelectedItem(index);\r\n                    }}\r\n                    color={color}\r\n                  />\r\n                ))\r\n              )}\r\n            </div>\r\n          </animated.div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AiAssistant;\r\n","import React, {\r\n  useEffect,\r\n    useState,\r\n    useRef,\r\n    forwardRef,\r\n    useImperativeHandle,\r\n  } from \"react\";\r\nimport Text from \"../../../react-components/Text\";\r\nimport \"../../../assets/styles/styles.scss\";\r\nimport \"./ItemDetail.scss\";\r\nimport { ItemData } from \"../AiAssistant\"\r\nimport { OpenAIStream } from \"../../../openai/gpt4-request\";\r\n\r\n\r\nexport type ItemDetailProps = {\r\n  color: string;\r\n  id: string;\r\n  itemData: ItemData;\r\n};\r\n\r\nexport type ItemDetailHandle = {\r\n  log(): void;\r\n};\r\n\r\ntype ItemDisplay = {\r\n  title: string;\r\n  subtitle: string;\r\n  content: string;\r\n}\r\n\r\nconst ItemDetail = forwardRef<ItemDetailHandle, ItemDetailProps>(\r\n  ({ color, id, itemData }, ref) => {\r\n    const refForDiv = useRef<HTMLDivElement>(null);\r\n\r\n    const [item, setItem] = useState<ItemDisplay>({\r\n      title: itemData.title,\r\n      subtitle: itemData.subtitle,\r\n      content: \"generating text...\",\r\n    });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      log() {\r\n        if (refForDiv.current) {\r\n          refForDiv.current.className =\r\n            \"ai-assistant-item-details-main-container-end-animation\";\r\n        }\r\n      },\r\n    }));\r\n\r\n    // create a useEffect hook that calls generateText() when the component mounts\r\n    useEffect(() => {\r\n      generateText();\r\n    }, []);\r\n\r\n\r\n    // call openai streaming api and update item content with the response\r\n    const generateText = async () => {\r\n      const res = await fetch(\r\n        \"https://api.openai.com/v1/chat/completions\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${process.env.REACT_APP_OPEN_AI_API_KEY}`,\r\n          },\r\n          body: JSON.stringify({\r\n            \"model\": \"gpt-3.5-turbo\",\r\n            \"messages\": [{\"role\": \"user\", \"content\": itemData.payload}]\r\n          }),\r\n        }\r\n      );\r\n      const data = await res.json();\r\n      console.log(\"Data: \", data);\r\n      setItem({\r\n        title: itemData.title,\r\n        subtitle: itemData.subtitle,\r\n        content: data.choices[0].message.content,\r\n      });\r\n    };\r\n\r\n\r\n    return (\r\n      <div\r\n        ref={refForDiv}\r\n        style={{ backgroundColor: `${color}18` }}\r\n        className={\"ai-assistant-item-details-main-container\"}\r\n      >\r\n        <div className=\"ai-assistant-item-details-container\">\r\n          <div\r\n            style={{ borderBottomColor: color }}\r\n            className=\"ai-assistant-item-details-heading-text-container \"\r\n          >\r\n            <Text className=\"title-text-style\" label={itemData.title} />\r\n            <Text\r\n              className=\"subtitle-text-style\"\r\n              label={itemData.subtitle}\r\n            />\r\n          </div>\r\n          <Text\r\n            className=\"detail-text-style\"\r\n            label={item.content}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ItemDetail;\r\n","import React from \"react\";\r\nimport Button from \"../../Button/Button\";\r\nimport Text from \"../../Text/Text\";\r\nimport './ListItem.scss';\r\nimport ArrowForwardIcon from \"../../../assets/icons/arrowForwardIcon\";\r\n\r\nexport type ListItemProps = {\r\n  item: {\r\n    title: string;\r\n    subtitle: string;\r\n  };\r\n  onClickList: () => void;\r\n  color: string;\r\n};\r\n\r\nconst ListItem = ({ item, onClickList, color }: ListItemProps) => {\r\n  return (\r\n    <Button\r\n      onClick={onClickList}\r\n      style={{ backgroundColor: `${color}18` }}\r\n      className=\"ai-assistant-list-item-main-container\"\r\n      child={\r\n        <div className=\"container\">\r\n          <div className=\"text-container\">\r\n            <Text className=\"title-text-style\" label={item.title} />\r\n            <Text className=\"subtitle-text-style\" label={item.subtitle} />\r\n          </div>\r\n          <ArrowForwardIcon color={color} />\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport \"./Button.scss\";\r\n\r\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  child: React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ child, className = \"\", ...props }) => {\r\n  return (\r\n    <button className={`button-component-main-style ${className}`} {...props}>\r\n      {child}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n\r\n","import React from \"react\";\r\nimport \"./EnvironmentError.scss\";\r\nimport Text from \"../Text/Text\";\r\n\r\nexport type EnvironmentErrorProps = {\r\n  color: string;\r\n};\r\n\r\nconst EnvironmentError: React.FC<EnvironmentErrorProps> = ({ color }) => {\r\n  return (\r\n    <div className=\"environment-error-main-container-style\">\r\n      <div className=\"top-container\">\r\n        <Text\r\n          className=\"heading-text-style\"\r\n          label=\"Message for Developer\"\r\n        />\r\n      </div>\r\n      <div className=\"bottom-container\">\r\n        <Text\r\n          className=\"text-style\"\r\n          label=\"Your Application is missing the following API/SDK keys in your process file (usually .env):\"\r\n        />\r\n         <br></br> \r\n        <Text\r\n          className=\"text-style\"\r\n          label=\"1. OPEN_AI_API_KEY\"\r\n        />\r\n        <br></br> \r\n        <Text\r\n          className=\"text-style\"\r\n          label=\"2. LAYER_SDK_KEY\"\r\n        />\r\n          <br></br> \r\n        <Text\r\n          className=\"text-style\"\r\n          label=\"Please add these keys to your process file to correct the error\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EnvironmentError;\r\n","import React from \"react\";\r\nimport \"./Loader.scss\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"lds-ring\">\r\n          <div>Loader</div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport \"./Text.scss\";\r\nexport interface TextProps extends React.HTMLProps<HTMLParagraphElement> {\r\n  label: string;\r\n  className?: string;\r\n}\r\n\r\nconst Text: React.FC<TextProps> = ({ label, className, ...props }) => {\r\n  return (\r\n    <p className={`text-main-style ${className}`} {...props}>\r\n      {label}\r\n    </p>\r\n  );\r\n};\r\n\r\nexport default Text;\r\n\r\n"],"names":[],"sourceRoot":""}